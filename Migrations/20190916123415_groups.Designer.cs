// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UIPath.Models.Context;

namespace UIPath.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20190916123415_groups")]
    partial class groups
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UIPath.Models.Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("UIPath.Models.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("UIPath.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultantId");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("GroupName")
                        .IsRequired();

                    b.Property<string>("LabName");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int>("Statu");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("UIPath.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TCKN");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UIPath.Models.UIPathStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brans");

                    b.Property<string>("CourseEndDate");

                    b.Property<string>("CourseStartDate");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int?>("GroupId");

                    b.Property<bool>("IsStudent");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int>("Seans");

                    b.Property<string>("TCKN");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("UIPathStudents");
                });

            modelBuilder.Entity("UIPath.Models.Group", b =>
                {
                    b.HasOne("UIPath.Models.Consultant", "Consultant")
                        .WithMany("Groups")
                        .HasForeignKey("ConsultantId");
                });

            modelBuilder.Entity("UIPath.Models.UIPathStudent", b =>
                {
                    b.HasOne("UIPath.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
